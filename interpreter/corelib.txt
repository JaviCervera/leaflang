// App
function AppName:String()
function AppArgs:List()
function Run:String(command:String)
function _IncRef:Raw(ptr:Raw)
function _DecRef(ptr:Raw)
function _AutoDec:Raw(ptr:Raw)
function _DoAutoDec()

// Console
function Input:String(prompt:String)
function Print(msg:String)

// Dir
function DirContents:List(path:String)
function CurrentDir:String()
function ChangeDir(dir:String)
function FullPath:String(filename:String)

// File
function FileType:Int(filename:String)
function DeleteFile(filename:String)

// List
function _CreateList:List()
function _SetListInt:List(list:List, index:Int, v:Int)
function _SetListFloat:List(list:List, index:Int, v:Float)
function _SetListString:List(list:List, index:Int, v:String)
function _SetListList:List(list:List, index:Int, v:List)
function _SetListDict:List(list:List, index:Int, v:Dict)
function _SetListRef:List(list:List, index:Int, v:Raw)
function _ListInt:Int(list:List, index:Int)
function _ListFloat:Float(list:List, index:Int)
function _ListString:String(list:List, index:Int)
function _ListList:List(list:List, index:Int)
function _ListDict:Dict(list:List, index:Int)
function _ListRef:Raw(list:List, index:Int)
function _ListToString:String(list:List)
function RemoveIndex(list:List, index:Int)
function ListSize:Int(list:List)
function ClearList(list:List)

// Dict
function _CreateDict:Dict()
function _SetDictInt:Dict(dict:Dict, key:String, v:Int)
function _SetDictFloat:Dict(dict:Dict, key:String, v:Float)
function _SetDictString:Dict(dict:Dict, key:String, v:String)
function _SetDictList:Dict(dict:Dict, key:String, v:List)
function _SetDictDict:Dict(dict:Dict, key:String, v:Dict)
function _SetDictRef:Dict(dict:Dict, key:String, v:Raw)
function _DictInt:Int(dict:Dict, key:String)
function _DictFloat:Float(dict:Dict, key:String)
function _DictString:String(dict:Dict, key:String)
function _DictList:List(dict:Dict, key:String)
function _DictDict:Dict(dict:Dict, key:String)
function _DictRef:Raw(dict:Dict, key:String)
function _DictToString:String(dict:Dict)
function Contains:Int(dict:Dict, key:String)
function RemoveKey(dict:Dict, key:String)
function DictSize:Int(dict:Dict)
function ClearDict(dict:Dict)

// Math
function ASin:Float(x:Float)
function ATan:Float(x:Float)
function ATan2:Float(x:Float, y:Float)
function Abs:Float(x:Float)
function Ceil:Float(x:Float)
function Clamp:Float(x:Float, min:Float, max:Float)
function Cos:Float(x:Float)
function Exp:Float(x:Float)
function Floor:Float(x:Float)
function Log:Float(x:Float)
function Max:Float(x:Float, y:Float)
function Min:Float(x:Float, y:Float)
function Pow:Float(x:Float, y:Float)
function Sgn:Float(x:Float)
function Sin:Float(x:Float)
function Sqrt:Float(x:Float)
function Tan:Float(x:Float)

// Memory
function Dim:Raw(size:Int)
function Undim(mem:Raw)
function Redim(mem:Raw, size:Int)
function LoadDim:Raw(filename:String)
function SaveDim(mem:Raw, filename:String)
function DimSize:Int(mem:Raw)
function PeekByte:Int(mem:Raw, offset:Int)
function PeekShort:Int(mem:Raw, offset:Int)
function PeekInt:Int(mem:Raw, offset:Int)
function PeekFloat:Float(mem:Raw, offset:Int)
function PeekString:String(mem:Raw, offset:Int)
function PeekRef:Raw(mem:Raw, offset:Int)
function PokeByte(mem:Raw, offset:Int, v:Int)
function PokeShort(mem:Raw, offset:Int, v:Int)
function PokeInt(mem:Raw, offset:Int, v:Int)
function PokeFloat(mem:Raw, offset:Int, v:Float)
function PokeString(mem:Raw, offset:Int, v:String)
function PokeRef(mem:Raw, offset:Int, v:Raw)

// String
function Len:Int(str:String)
function Left:String(str:String, count:Int)
function Right:String(str:String, count:Int)
function Mid:String(str:String, offset:Int, count:Int)
function Lower:String(str:String)
function Upper:String(str:String)
function Find:Int(str:String, find:String, offset:Int)
function Replace:String(str:String, find:String, rep:String)
function Trim:String(str:String)
function Join:String(list:List, separator:String)
function Split:List(str:String, separator:String)
function StripExt:String(filename:String)
function StripDir:String(filename:String)
function ExtractExt:String(filename:String)
function ExtractDir:String(filename:String)
function Asc:Int(str:String, index:Int)
function Chr:String(code:Int)
function LoadString:String(filename:String)
function SaveString(filename:String, str:String, append:Int)

// Callable
function AddIntArg(arg:Int)
function AddFloatArg(arg:Float)
function AddStringArg(arg:String)
function Call(name:String)
function CallInt:Int(name:String)
function CallFloat:Float(name:String)
function CallString:String(name:String)
function Callable:Int(name:String)
